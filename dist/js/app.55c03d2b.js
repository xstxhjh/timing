!function(s){function t(t){for(var r,e,p=t[0],v=t[1],c=t[2],o=0,i=[];o<p.length;o++)e=p[o],n[e]&&i.push(n[e][0]),n[e]=0;for(r in v)Object.prototype.hasOwnProperty.call(v,r)&&(s[r]=v[r]);for(_&&_(t);i.length;)i.shift()();return l.push.apply(l,c||[]),a()}function a(){for(var s,t=0;t<l.length;t++){for(var a=l[t],r=!0,e=1;e<a.length;e++){var v=a[e];0!==n[v]&&(r=!1)}r&&(l.splice(t--,1),s=p(p.s=a[0]))}return s}var r={},e={app:0},n={app:0},l=[];function p(t){if(r[t])return r[t].exports;var a=r[t]={i:t,l:!1,exports:{}};return s[t].call(a.exports,a,a.exports,p),a.l=!0,a.exports}p.e=function(s){var t=[];e[s]?t.push(e[s]):0!==e[s]&&{"chunk-1aed8b10":1,"chunk-252429f4":1,"chunk-7bd2e296":1,"chunk-883b3f22":1,"chunk-e368f170":1}[s]&&t.push(e[s]=new Promise(function(t,a){for(var r="css/"+({}[s]||s)+"."+{"chunk-1aed8b10":"0ee9e404","chunk-252429f4":"7017847c","chunk-7bd2e296":"25d36484","chunk-883b3f22":"4023a706","chunk-e368f170":"dcfb4880"}[s]+".css",n=p.p+r,l=document.getElementsByTagName("link"),v=0;v<l.length;v++){var c=(_=l[v]).getAttribute("data-href")||_.getAttribute("href");if("stylesheet"===_.rel&&(c===r||c===n))return t()}var o=document.getElementsByTagName("style");for(v=0;v<o.length;v++){var _;if((c=(_=o[v]).getAttribute("data-href"))===r||c===n)return t()}var i=document.createElement("link");i.rel="stylesheet",i.type="text/css",i.onload=t,i.onerror=function(t){var r=t&&t.target&&t.target.src||n,l=new Error("Loading CSS chunk "+s+" failed.\n("+r+")");l.code="CSS_CHUNK_LOAD_FAILED",l.request=r,delete e[s],i.parentNode.removeChild(i),a(l)},i.href=n,document.getElementsByTagName("head")[0].appendChild(i)}).then(function(){e[s]=0}));var a=n[s];if(0!==a)if(a)t.push(a[2]);else{var r=new Promise(function(t,r){a=n[s]=[t,r]});t.push(a[2]=r);var l,v=document.createElement("script");v.charset="utf-8",v.timeout=120,p.nc&&v.setAttribute("nonce",p.nc),v.src=function(s){return p.p+"js/"+({}[s]||s)+"."+{"chunk-1aed8b10":"c06b47d1","chunk-252429f4":"4d3ad98a","chunk-7bd2e296":"b45968e3","chunk-883b3f22":"49b6d696","chunk-e368f170":"48dfa077"}[s]+".js"}(s),l=function(t){v.onerror=v.onload=null,clearTimeout(c);var a=n[s];if(0!==a){if(a){var r=t&&("load"===t.type?"missing":t.type),e=t&&t.target&&t.target.src,l=new Error("Loading chunk "+s+" failed.\n("+r+": "+e+")");l.type=r,l.request=e,a[1](l)}n[s]=void 0}};var c=setTimeout(function(){l({type:"timeout",target:v})},12e4);v.onerror=v.onload=l,document.head.appendChild(v)}return Promise.all(t)},p.m=s,p.c=r,p.d=function(s,t,a){p.o(s,t)||Object.defineProperty(s,t,{enumerable:!0,get:a})},p.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},p.t=function(s,t){if(1&t&&(s=p(s)),8&t)return s;if(4&t&&"object"==typeof s&&s&&s.__esModule)return s;var a=Object.create(null);if(p.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:s}),2&t&&"string"!=typeof s)for(var r in s)p.d(a,r,function(t){return s[t]}.bind(null,r));return a},p.n=function(s){var t=s&&s.__esModule?function(){return s.default}:function(){return s};return p.d(t,"a",t),t},p.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},p.p="",p.oe=function(s){throw s};var v=window.webpackJsonp=window.webpackJsonp||[],c=v.push.bind(v);v.push=t,v=v.slice();for(var o=0;o<v.length;o++)t(v[o]);var _=c;l.push([0,"vendors~app"]),a()}({0:function(s,t,a){s.exports=a("56d7")},"0a5e":function(s,t,a){"use strict";a.r(t);var r=a("e017"),e=a.n(r),n=a("21a1"),l=a.n(n),p=new e.a({id:"icon-antDesign",use:"icon-antDesign-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="icon-antDesign"><defs><style type="text/css"></style></defs><path d="M716.3 313.8c19-18.9 19-49.7 0-68.6l-69.9-69.9 0.1 0.1c-18.5-18.5-50.3-50.3-95.3-95.2-21.2-20.7-55.5-20.5-76.5 0.5L80.9 474.2c-21.2 21.1-21.2 55.3 0 76.4L474.6 944c21.2 21.1 55.4 21.1 76.5 0l165.1-165c19-18.9 19-49.7 0-68.6-19-18.9-49.7-18.9-68.7 0l-125 125.2c-5.2 5.2-13.3 5.2-18.5 0L189.5 521.4c-5.2-5.2-5.2-13.3 0-18.5l314.4-314.2c0.4-0.4 0.9-0.7 1.3-1.1 5.2-4.1 12.4-3.7 17.2 1.1l125.2 125.1c19 19 49.8 19 68.7 0z" p-id="3406" fill="#f38181" data-spm-anchor-id="a313x.7781069.0.i0" class="" /><path d="M408.6 514.4a106.3 106.2 0 1 0 212.6 0 106.3 106.2 0 1 0-212.6 0Z" p-id="3407" fill="#ffaa64" data-spm-anchor-id="a313x.7781069.0.i3" class="" /><path d="M944.8 475.8L821.9 353.5c-19-18.9-49.8-18.9-68.7 0.1-19 18.9-19 49.7 0 68.6l83 82.9c5.2 5.2 5.2 13.3 0 18.5l-81.8 81.7c-19 18.9-19 49.7 0 68.6 19 18.9 49.7 18.9 68.7 0l121.8-121.7c21.1-21.1 21.1-55.2-0.1-76.4z" p-id="3408" fill="#e3fdfd" data-spm-anchor-id="a313x.7781069.0.i2" class="selected" /></symbol>'});l.a.add(p),t.default=p},"263d":function(s,t,a){"use strict";var r=a("f603");a.n(r).a},"33e6":function(s,t,a){"use strict";var r=a("4cfe");a.n(r).a},"42ec":function(s,t,a){},"4cfe":function(s,t,a){},"4ea0":function(s,t,a){"use strict";a.r(t);var r=a("e017"),e=a.n(r),n=a("21a1"),l=a.n(n),p=new e.a({id:"icon-blogroll",use:"icon-blogroll-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" id="icon-blogroll"><path d="M912 700.2c0 39.2-13.9 72.4-41.6 99.5l-72.1 71.5C771.2 898.4 738 912 698.8 912c-39.6 0-72.9-13.9-100-41.6L497.9 768.9c-27.1-27.1-40.7-60.3-40.7-99.5 0-40.2 14.3-74.3 43.1-102.5l-43.1-43.1c-28.1 28.8-62.1 43.1-102 43.1-39.2 0-72.6-13.7-100-41.1l-102-102.1c-27.4-27.4-41.1-60.8-41.1-100s13.9-72.4 41.6-99.5l72.1-71.5c27.1-27.1 60.3-40.7 99.5-40.7 39.5 0 72.9 13.9 100 41.6L526.2 255c27.1 27.1 40.7 60.3 40.7 99.5 0 40.2-14.4 74.3-43.1 102.5l43.1 43.1C595 471.3 629 457 668.9 457c39.2 0 72.6 13.7 100 41.1l102 102c27.4 27.6 41.1 61 41.1 100.1zM473.2 354.7c0-13.1-4.5-24.2-13.7-33.3L358.6 219.9c-9.2-9.2-20.3-13.7-33.3-13.7-12.8 0-23.8 4.4-33.3 13.2L219.9 291c-9.2 9.2-13.7 20.1-13.7 32.9 0 13.1 4.5 24.2 13.7 33.3l102 102c8.9 8.9 19.9 13.2 33.3 13.2 13.7 0 25.5-5.1 35.3-15.2-1-1-4.1-4-9.3-9.1-5.3-5.1-8.8-8.6-10.5-10.5s-4.2-5.1-7.3-9.3c-3.1-4.2-5.3-8.5-6.4-12.5-1.1-4.1-1.8-8.6-1.8-13.5 0-13.1 4.5-24.2 13.7-33.3 9.2-9.2 20.3-13.7 33.3-13.7 4.9 0 9.4 0.6 13.5 1.8s8.2 3.3 12.5 6.4c4.2 3.1 7.3 5.6 9.3 7.3 2 1.8 5.5 5.4 10.5 10.5 5.1 5.3 8 8.4 9.1 9.3 10.8-10.2 16.1-22.2 16.1-35.9z m344.7 345.5c0-13.1-4.5-24.2-13.7-33.3l-102-102c-9.2-9.2-20.3-13.7-33.3-13.7-13.7 0-25.5 5.3-35.3 15.7 1 1 4.1 4 9.3 9.1 5.3 5.1 8.8 8.6 10.5 10.5 1.8 2 4.2 5.1 7.3 9.3 3.1 4.2 5.3 8.5 6.4 12.5 1.1 4.1 1.8 8.6 1.8 13.5 0 13.1-4.5 24.2-13.7 33.3-9.2 9.2-20.3 13.7-33.3 13.7-4.9 0-9.4-0.5-13.5-1.8-4.1-1.1-8.2-3.3-12.5-6.4-4.2-3.1-7.3-5.6-9.3-7.3s-5.5-5.3-10.5-10.5-8-8.4-9.1-9.3c-10.8 10.1-16.2 22.1-16.2 35.8 0 13.1 4.5 24.2 13.7 33.3L665.4 804c8.9 8.9 19.9 13.2 33.3 13.2 13.1 0 24.2-4.2 33.3-12.8l72.1-71.5c9.2-8.9 13.8-19.9 13.8-32.7z" p-id="4989" /></symbol>'});l.a.add(p),t.default=p},"56d7":function(s,t,a){"use strict";a.r(t),a("cadf"),a("551c"),a("f751"),a("097d");var r=a("8bbf"),e=a.n(r),n=(a("4917"),{name:"app",data:function(){return{}},created:function(){var s=this,t=JSON.parse('[{"fileName":"amway.md","routeName":"amway","fileContent":"[title]:#(安利一些我收藏的网站)[date]:#(2019-08-06&nbsp;14:20:52)[categories]:#(安利)[description]:#(给大家推荐一些我收藏夹里的网站。<br>幸福，是拿来分享的。)[image]:#(https://i.loli.net/2019/08/20/nvE9VFbAgptoJmk.jpg)","timeDate":"20190806142052"},{"fileName":"响应式布局.md","routeName":"响应式布局","fileContent":"[title]:#(响应式Web设计)[date]:#(2019-01-19&nbsp;19:44:07)[categories]:#(响应式布局)[description]:#(页面的设计与开发应当根据用户行为以及设备环境[系统平台、屏幕尺寸、屏幕定向等]进行相应的响应和调整。<br>那年乱世如麻,愿你们来世拥有锦绣年华)[image]:#(https://i.loli.net/2019/08/28/P7BAScxR6IKYv4H.jpg)","timeDate":"20190119194407"},{"fileName":"Iterator.md","routeName":"Iterator","fileContent":"[title]:#(你需要学习的Iterator和for...of循环)[date]:#(2019-01-02&nbsp;10:01:52)[categories]:#(ES6+)[description]:#(2018我尝试过去改变别人，直到摔得鼻青脸肿，我才清醒过来。2019只想去改变自己！<br>遍历山河，人间值得)[image]:#(https://i.loli.net/2019/08/27/kpMGesmcE5dJFND.jpg)","timeDate":"20190102100152"},{"fileName":"Async.md","routeName":"Async","fileContent":"[title]:#(你需要学习的Async函数)[date]:#(2018-12-28&nbsp;14:10:46)[categories]:#(ES6+)[description]:#(位卑未敢忘忧国)[image]:#(https://i.loli.net/2019/08/30/5D1RqguHyVrdW6w.jpg)","timeDate":"20181228141046"},{"fileName":"Promise.md","routeName":"Promise","fileContent":"[title]:#(你需要学习的Promise对象)[date]:#(2018-12-21&nbsp;10:42:11)[categories]:#(ES6+)[description]:#(沉下心来，去做一件事情，这便是快乐的时光。<br>迎风而上还是跌落深渊?)[image]:#(https://i.loli.net/2019/08/20/842LqZojNdCJfis.jpg)","timeDate":"20181221104211"}]'),a=[];t.map(function(t){var r=t.fileContent,e=r.match(/\[title\]:#\((.*?)\)/)[1],n=r.match(/\[date\]:#\((.*?)\)/)[1],l=r.match(/\[categories\]:#\((.*?)\)/)[1],p=r.match(/\[description\]:#\((.*?)\)/)[1],v=r.match(/\[image\]:#\((.*?)\)/)[1];a.push({title:e,date:n,categories:l,description:p,image:v,timeDate:t.timeDate,routeName:t.routeName}),s.$store.commit("setMarkdownAll",a)})},mounted:function(){},methods:{}}),l=(a("5c0b"),a("2877")),p=Object(l.a)(n,function(){var s=this.$createElement,t=this._self._c||s;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},[],!1,null,null,null).exports,v=a("6389"),c=a.n(v),o=(a("7f7f"),a("5118"),{name:"layout",components:{},data:function(){return{navIconOpen:!0,currentRouteName:"",topValue:"0%"}},watch:{$route:{handler:function(s){this.currentRouteName=s.name},immediate:!0},navIconOpen:{handler:function(s){s?(TweenMax.to(".box-left",.2,{width:"32rem"}),TweenMax.to(".avatar",.2,{opacity:1})):TweenMax.to(".box-left",.4,{width:"0"})},immediate:!0}},filters:{},computed:{},created:function(){},mounted:function(){window.addEventListener("scroll",this.handleScroll,!0)},beforeDestroy:function(){window.removeEventListener("scroll",this.handleScroll,!1)},methods:{backTop:function(){TweenMax.to(window,.4,{scrollTo:0})},handleScroll:function(){var s=this;if(!this.handleScroll.debounce){var t=document.body.clientHeight||document.documentElement.clientHeight,a=this.$refs.boxHeight.scrollHeight,r=document.body.scrollTop||document.documentElement.scrollTop||window.pageXOffset;this.$nextTick(function(){var e=Math.round(r/(a-t)*100);r+t==a&&(e=100),0==r&&(e=0),s.topValue=100<e?100:e}),this.handleScroll.debounce=!0,this.$nextTick(function(){s.handleScroll.debounce=!1})}},goToMain:function(s){document.title="Timing | ".concat(s),this.$router.push({name:s})},navIconChange:function(){this.navIconOpen=!this.navIconOpen},trapezoidMouseenter:function(){TweenMax.to(".end-trapezoid",.3,{width:"18rem",opacity:.5})},trapezoidMouseleave:function(){TweenMax.to(".end-trapezoid",.3,{width:"17rem",opacity:1})}}}),_=(a("33e6"),Object(l.a)(o,function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"app-container"},[a("div",{staticClass:"box-left"},[a("div",{staticClass:"box-left-content"},[a("div",{directives:[{name:"show",rawName:"v-show",value:s.navIconOpen,expression:"navIconOpen"}],staticClass:"box-left-info"},[a("img",{staticClass:"avatar",attrs:{src:"https://i.loli.net/2019/08/05/Lo9nyjTO5ZUN6im.jpg"}}),a("router-link",{staticClass:"nickname",attrs:{to:"about"}},[s._v("Chirenmeng")]),a("div",{staticClass:"sketch"},[s._v("一个属于前端的博客")]),a("a",{staticClass:"github",attrs:{target:"_blank",href:"https://github.com/xstxhjh"}},[a("svg-icon",{staticClass:"github-icon",attrs:{"icon-class":"github"}}),a("span",[s._v("GitHub")])],1),a("a",{staticClass:"cc-by-link",attrs:{target:"_blank",href:"https://creativecommons.org/licenses/by-nc-sa/4.0/"}},[a("svg-icon",{staticClass:"cc-by-icon",attrs:{"icon-class":"cc-by-nc-sa"}})],1),a("div",{staticClass:"blogroll"},[a("svg-icon",{staticClass:"blogroll-icon",attrs:{"icon-class":"blogroll"}}),a("span",[s._v("友情链接")])],1),a("a",{staticClass:"blogroll-link",attrs:{target:"_blank",href:"https://github.com/30-seconds/30-seconds-of-code"}},[s._v("30-seconds-of-code")]),a("a",{staticClass:"blogroll-link",attrs:{target:"_blank",href:"https://juejin.im/post/59097cd7a22b9d0065fb61d2"}},[s._v("手摸手，带你用vue撸后台")])],1),a("div",{class:["nav-icon",s.navIconOpen?"open":""],on:{click:s.navIconChange}},[a("span"),a("span"),a("span")])])]),a("div",{ref:"boxHeight",staticClass:"box-center"},[a("div",{staticClass:"nav-views"},[a("div",{class:["nav-views-item","home"==s.currentRouteName?"nav-views-item-active":""],on:{click:function(t){return s.goToMain("home")}}},[s._v("Home")]),a("div",{class:["nav-views-item","archives"==s.currentRouteName?"nav-views-item-active":""],on:{click:function(t){return s.goToMain("archives")}}},[s._v("Archives")]),a("div",{class:["nav-views-item","categories"==s.currentRouteName?"nav-views-item-active":""],on:{click:function(t){return s.goToMain("categories")}}},[s._v("Categories")]),a("div",{class:["nav-views-item","about"==s.currentRouteName?"nav-views-item-active":""],on:{click:function(t){return s.goToMain("about")}}},[s._v("About")])]),a("router-view",{staticClass:"layout-content"}),a("div",{staticClass:"layout-end",on:{mouseenter:s.trapezoidMouseenter,mouseleave:s.trapezoidMouseleave}},[s._m(0)]),a("transition",{attrs:{name:"fade",mode:"out-in"}},[a("div",{directives:[{name:"show",rawName:"v-show",value:0<s.topValue,expression:"topValue>0"}],staticClass:"ProgressBar",on:{click:s.backTop}},[a("span",[s._v(s._s(s.topValue)+"%")]),a("span",[s._v("☂")])])])],1)])},[function(){var s=this.$createElement,t=this._self._c||s;return t("a",{staticClass:"end-trapezoid",attrs:{href:"https://github.com/xstxhjh",target:"_blank"}},[t("span",[this._v("Chirenmeng")])])}],!1,null,"5361993c",null).exports);a("ac6a"),hljs.highlightCode=function(){var s=document.querySelectorAll("pre code");[].forEach.call(s,hljs.highlightBlock)};var i={name:"MarkdownView",data:function(){return{}},mounted:function(){hljs.highlightCode()},activated:function(){},updated:function(){}},h=(a("263d"),Object(l.a)(i,function(){var s=this.$createElement;return(this._self._c||s)("router-view",{staticClass:"router-post-body"})},[],!1,null,"54761e9e",null).exports),j=(a("28a5"),a("d203")),d=j.keys(),u=[];d.map(function(s){var t=s.split("/")[1],r=s.split(/\/(\S*)\./)[1];u.push({name:r,path:r,component:function(){return a("a383")("./".concat(t))}})});var m={mdRouteArr:u}.mdRouteArr;e.a.use(c.a);var f=[{path:"/",name:"Layout",meta:{title:"Layout"},component:_,redirect:"/home",children:[{path:"home",name:"home",meta:{title:"首页"},component:function(){return a.e("chunk-7bd2e296").then(a.bind(null,"6511"))}},{path:"about",name:"about",meta:{title:"关于"},component:function(){return a.e("chunk-252429f4").then(a.bind(null,"754b"))}},{path:"archives",name:"archives",meta:{title:"归档"},component:function(){return a.e("chunk-883b3f22").then(a.bind(null,"ed61"))}},{path:"categories",name:"categories",meta:{title:"分类"},component:function(){return a.e("chunk-1aed8b10").then(a.bind(null,"5f29"))}}]},{path:"/md",name:"md",component:_,redirect:"/md/posts/".concat(m[0].path),children:[{path:"posts",name:"posts",component:h,children:m}]},{path:"*",name:"/errors",meta:{title:"errors"},component:function(){return a.e("chunk-e368f170").then(a.bind(null,"9dd6"))}}],y=new c.a({mode:"hash",base:"/",routes:f}),w=a("5880"),g=a.n(w);e.a.use(g.a);var b=new g.a.Store({state:{markdownAll:[]},mutations:{setMarkdownAll:function(s,t){s.markdownAll=t}},actions:{}}),k=a("cebe"),x=a.n(k).a.create({baseURL:Object({NODE_ENV:"production",VUE_APP_CLI_UI_URL:"",VUE_APP_MD_FILES:'[{"fileName":"amway.md","routeName":"amway","fileContent":"[title]:#(安利一些我收藏的网站)[date]:#(2019-08-06&nbsp;14:20:52)[categories]:#(安利)[description]:#(给大家推荐一些我收藏夹里的网站。<br>幸福，是拿来分享的。)[image]:#(https://i.loli.net/2019/08/20/nvE9VFbAgptoJmk.jpg)","timeDate":"20190806142052"},{"fileName":"响应式布局.md","routeName":"响应式布局","fileContent":"[title]:#(响应式Web设计)[date]:#(2019-01-19&nbsp;19:44:07)[categories]:#(响应式布局)[description]:#(页面的设计与开发应当根据用户行为以及设备环境[系统平台、屏幕尺寸、屏幕定向等]进行相应的响应和调整。<br>那年乱世如麻,愿你们来世拥有锦绣年华)[image]:#(https://i.loli.net/2019/08/28/P7BAScxR6IKYv4H.jpg)","timeDate":"20190119194407"},{"fileName":"Iterator.md","routeName":"Iterator","fileContent":"[title]:#(你需要学习的Iterator和for...of循环)[date]:#(2019-01-02&nbsp;10:01:52)[categories]:#(ES6+)[description]:#(2018我尝试过去改变别人，直到摔得鼻青脸肿，我才清醒过来。2019只想去改变自己！<br>遍历山河，人间值得)[image]:#(https://i.loli.net/2019/08/27/kpMGesmcE5dJFND.jpg)","timeDate":"20190102100152"},{"fileName":"Async.md","routeName":"Async","fileContent":"[title]:#(你需要学习的Async函数)[date]:#(2018-12-28&nbsp;14:10:46)[categories]:#(ES6+)[description]:#(位卑未敢忘忧国)[image]:#(https://i.loli.net/2019/08/30/5D1RqguHyVrdW6w.jpg)","timeDate":"20181228141046"},{"fileName":"Promise.md","routeName":"Promise","fileContent":"[title]:#(你需要学习的Promise对象)[date]:#(2018-12-21&nbsp;10:42:11)[categories]:#(ES6+)[description]:#(沉下心来，去做一件事情，这便是快乐的时光。<br>迎风而上还是跌落深渊?)[image]:#(https://i.loli.net/2019/08/20/842LqZojNdCJfis.jpg)","timeDate":"20181221104211"}]',BASE_URL:""}).VUE_APP_BASE_API,timeout:1e4});x.interceptors.request.use(function(s){return s},function(s){return s}),x.interceptors.response.use(function(s){return s},function(s){return Promise.reject(s)});var C=x;y.beforeEach(function(s,t,a){Pace.start(),TweenMax.to(window,0,{scrollTo:0}),a()}),y.afterEach(function(){Pace.stop()});var S={name:"SvgIcon",props:{iconClass:{type:String,required:!0},className:{type:String,default:""}},computed:{iconName:function(){return"#icon-".concat(this.iconClass)},svgClass:function(){return this.className?"svg-icon "+this.className:"svg-icon"}}},L=(a("89a2"),Object(l.a)(S,function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("svg",s._g({class:s.svgClass,attrs:{"aria-hidden":"true"}},s.$listeners),[a("use",{attrs:{"xlink:href":s.iconName}})])},[],!1,null,"40fadd4f",null).exports);e.a.component("svg-icon",L);var M,P=a("cfd9");(M=P).keys().map(M),e.a.prototype.$TweenMax=TweenMax,e.a.prototype.$axios=C,e.a.config.productionTip=!1,new e.a({router:y,store:b,render:function(s){return s(p)}}).$mount("#app")},5880:function(s,t){s.exports=Vuex},"5c0b":function(s,t,a){"use strict";var r=a("5e27");a.n(r).a},"5e27":function(s,t,a){},6389:function(s,t){s.exports=VueRouter},"6a8a":function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},function(){this.$createElement;return this._self._c,this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hr"),a("h1",[s._v("一、Promise 的含义")]),a("p",[s._v("摘自：MDN —— "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise#%E6%8F%8F%E8%BF%B0"}},[s._v("Promise")])]),a("blockquote",[a("p",[a("strong",[s._v("Promise")]),s._v(" 对象是一个代理对象（代理一个值），被代理的值在 Promise 对象创建时可能是未知的。它允许你为异步操作的成功和失败分别绑定相应的处理方法（handlers）。 这让异步方法可以像同步方法那样返回值，但并不是立即返回最终执行结果，而是一个能代表未来出现的结果的 promise 对象")]),a("p",[s._v("一个 Promise 有以下几种状态:")]),a("ul",[a("li",[a("p",[s._v("pending: 初始状态，既不是成功，也不是失败状态。")])]),a("li",[a("p",[s._v("fulfilled: 意味着操作成功完成。")])]),a("li",[a("p",[s._v("rejected: 意味着操作失败。")])])]),a("p",[s._v("pending 状态的 Promise 对象可能触发 fulfilled 状态并传递一个值给相应的状态处理方法，也可能触发失败状态（rejected）并传递失败信息。当其中任一种情况出现时，Promise 对象的 then 方法绑定的处理方法（handlers ）就会被调用（then 方法包含两个参数：onfulfilled 和 onrejected，它们都是 Function 类型。当 Promise 状态为 fulfilled 时，调用 then 的 onfulfilled 方法，当 Promise 状态为 rejected 时，调用 then 的 onrejected 方法， 所以在异步操作的完成和绑定处理方法之间不存在竞争）。")]),a("p",[s._v("因为 Promise.prototype.then 和 Promise.prototype.catch 方法返回 promise 对象， 所以它们可以被链式调用。")])]),a("h1",[s._v("二、基本用法")]),a("h2",[s._v("简单的例子")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" myFirstPromise = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//当异步代码执行成功时，我们才会调用resolve(...), 当异步代码失败时就会调用reject(...)")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//在本例中，我们使用setTimeout(...)来模拟异步代码，实际编码时可能是XHR请求或是HTML5的一些API方法.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Promise'")]),s._v(")\n  setTimeout("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n    resolve("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Resolved.'")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//代码正常执行！")]),s._v("\n  }, "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(")\n})\n\nmyFirstPromise.then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("successMessage")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//successMessage的值是上面调用resolve(...)方法传入的值.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(successMessage)\n})\n\n"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hi!'")]),s._v(")\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 上述代码会依次打印")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Promise")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Hi!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Resolved.")]),s._v("\n")])]),a("p",[s._v("传递到 then 中的函数被置入了一个微任务队列，而不是立即执行，这意味着它是在 JavaScript 事件队列的所有运行时结束了，事件队列被清空之后才开始执行:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" wait = "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("ms")]),s._v(" =>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve")]),s._v(" =>")]),s._v(" setTimeout(resolve, ms))\n\nwait().then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v(".resolve()\n  .then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("))\n  .then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1, 2, 3, 4")]),s._v("\n")])]),a("h2",[s._v("Catch 的后续链式操作")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Initial'")]),s._v(")\n\n  resolve()\n})\n  .then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Something failed'")]),s._v(")\n\n    "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Do this'")]),s._v(")\n  })\n  .catch("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Do that'")]),s._v(")\n  })\n  .then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Do this whatever happened before'")]),s._v(")\n  })\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 上述代码会依次打印")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Initial")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Do that")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Do this whatever happened before")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 注意，由于“Something failed”错误导致了拒绝操作，所以“Do this”文本没有被输出。")]),s._v("\n")])]),a("h2",[s._v("Promise.prototype.done()")]),a("p",[s._v("Promise 对象的回调链，不管以 then 方法或 catch 方法结尾，要是最后一个方法抛出错误，都有可能无法捕捉到（因为 Promise 内部的错误不会冒泡到全局）。因此，我们可以提供一个 done 方法，总是处于回调链的尾端，保证抛出任何可能出现的错误。")]),a("h2",[s._v("Promise.prototype.finally()")]),a("p",[s._v("finally 方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。它与 done 方法的最大区别，它接受一个普通的回调函数作为参数，该函数不管怎样都必须执行。")]),a("h2",[s._v("Promise.all()")]),a("p",[s._v("Promise.all()接受一个由 promise 任务组成的数组，可以同时处理多个 promise 任务，当所有的任务都执行完成时，Promise.all()返回 resolve，但当有一个失败(reject)，则返回失败的信息，即使其他 promise 执行成功，也会返回失败。")]),a("h2",[s._v("Promise.race()")]),a("p",[s._v("顾名思义，Promse.race()就是赛跑的意思，意思就是说，Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。")]),a("h2",[s._v("Promise.resolve()")]),a("p",[s._v("有时需要将现有对象转为 Promise 对象，Promise.resolve 方法就起到这个作用。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v(".resolve("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等价于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve")]),s._v(" =>")]),s._v(" resolve("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v("))\n\np.then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("s")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(s) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// foo")]),s._v("\n})\n")])]),a("h2",[s._v("Promise.reject()")]),a("p",[s._v("Promise.reject(reason)方法也会返回一个新的 Promise 实例，该实例的状态为 rejected。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v(".reject("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'出错了'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" reject("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'出错了'")]),s._v("))\n\np.then("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("s")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(s) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 出错了")]),s._v("\n})\n")])])])}],!1,null,null,null);t.default=e.exports},"76f4":function(s,t,a){"use strict";a.r(t);var r=a("e017"),e=a.n(r),n=a("21a1"),l=a.n(n),p=new e.a({id:"icon-github",use:"icon-github-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" id="icon-github"><path d="M64.6 512c0 195.6 125.4 361.9 300.1 422.9 23.5 5.9 19.9-10.8 19.9-22.2v-77.6c-135.8 15.9-141.3-74-150.5-89-18.5-31.5-61.9-39.5-49-54.5 31-15.9 62.5 4 98.9 58 26.4 39.1 77.9 32.5 104.1 26 5.7-23.5 17.9-44.5 34.7-60.9-140.7-25.2-199.4-111.1-199.4-213.3 0-49.5 16.4-95.1 48.4-131.8-20.4-60.6 1.9-112.4 4.9-120.1 58.2-5.2 118.5 41.6 123.3 45.3 33.1-8.9 70.8-13.7 112.9-13.7 42.4 0 80.3 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.4-43.9 2.9 7.7 24.7 58.3 5.5 118.1 32.5 36.8 49 82.8 49 132.4 0 102.3-59 188.3-200.2 213.2 23.5 23.3 38.1 55.5 38.1 91.1v112.7c0.8 9 0 17.9 15.1 17.9C832.7 877 960.4 709.4 960.4 512.1c0-247.5-200.6-447.9-447.9-447.9C265 64.1 64.6 264.5 64.6 512z" fill="" p-id="2111" data-spm-anchor-id="a313x.7781069.0.i2" class="selected" /></symbol>'});l.a.add(p),t.default=p},"7e2e":function(s,t,a){"use strict";a.r(t);var r=a("e017"),e=a.n(r),n=a("21a1"),l=a.n(n),p=new e.a({id:"icon-cc-by-nc-sa",use:"icon-cc-by-nc-sa-usage",viewBox:"0 0 80 15",content:'<symbol xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 80 15" id="icon-cc-by-nc-sa"><g inkscape:label="Layer 1" inkscape:groupmode="layer" id="icon-cc-by-nc-sa_layer1"><g id="icon-cc-by-nc-sa_BY-NC-SA" transform="matrix(0.9875019,0,0,0.9333518,-323.90064,-331.6114)"><g transform="translate(158,118)" id="icon-cc-by-nc-sa_g3729"><rect y="237.86218" x="170.5" height="15" width="80" id="icon-cc-by-nc-sa_rect3731" style="fill:#fff;fill-opacity:1;stroke:#000;stroke-width:1.04161763;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" /><rect style="fill:#000;fill-opacity:1;stroke:none;stroke-width:.92243534;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" id="icon-cc-by-nc-sa_rect3733" width="77" height="12" x="172" y="239.36218" /><path sodipodi:nodetypes="cccscc" id="icon-cc-by-nc-sa_path3735" d="M 171.99996,239.37505 L 171.99996,251.37505 L 192.33474,251.37505 C 193.64339,249.62474 194.52652,247.59057 194.52652,245.37505 C 194.52652,243.17431 193.65859,241.1179 192.36599,239.37505 L 171.99996,239.37505 z" style="fill:#abb1aa;fill-opacity:1;stroke:none;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:.46913578" /><g clip-path="url(#clipPath3442)" transform="matrix(0.9612533,0,0,0.9612533,6.8341566,9.5069994)" id="icon-cc-by-nc-sa_g3737"><path style="opacity:1;fill:#fff" d="M 190.06417,245.36206 C 190.06667,249.25405 186.91326,252.41072 183.02153,252.41323 C 179.12979,252.41572 175.97262,249.26256 175.97036,245.3706 C 175.97036,245.36783 175.97036,245.36507 175.97036,245.36206 C 175.9681,241.47007 179.12126,238.3134 183.013,238.31113 C 186.90524,238.30864 190.06191,241.46181 190.06417,245.3538 C 190.06417,245.35628 190.06417,245.35929 190.06417,245.36206 z" rx="22.939548" type="arc" cy="264.3577" ry="22.939548" cx="296.35416" id="icon-cc-by-nc-sa_path3739" /><path style="opacity:1" id="icon-cc-by-nc-sa_path3741" d="M 188.74576,239.62226 C 190.30843,241.18492 191.08988,243.09869 191.08988,245.36206 C 191.08988,247.62592 190.32197,249.51913 188.78615,251.04165 C 187.15627,252.64521 185.22995,253.44672 183.00722,253.44672 C 180.81132,253.44672 178.91837,252.65172 177.32887,251.06174 C 175.73912,249.47198 174.94436,247.57226 174.94436,245.36206 C 174.94436,243.15235 175.73912,241.23908 177.32887,239.62226 C 178.87799,238.0591 180.77094,237.27764 183.00722,237.27764 C 185.2706,237.27764 187.18312,238.05909 188.74576,239.62226 z M 178.38093,240.67355 C 177.05978,242.008 176.39945,243.57116 176.39945,245.36429 C 176.39945,247.15694 177.05326,248.70682 178.36062,250.01393 C 179.66822,251.32153 181.22487,251.97509 183.03105,251.97509 C 184.83724,251.97509 186.40716,251.31502 187.74161,249.99412 C 189.0086,248.76725 189.64234,247.22467 189.64234,245.36429 C 189.64234,243.51799 188.99831,241.95084 187.71101,240.66354 C 186.42396,239.37649 184.86406,238.7327 183.03105,238.7327 C 181.19804,238.73271 179.64767,239.37975 178.38093,240.67355 z M 181.85761,244.57559 C 181.65573,244.13545 181.35354,243.91525 180.95051,243.91525 C 180.23802,243.91525 179.8819,244.39501 179.8819,245.35404 C 179.8819,246.31328 180.23802,246.79255 180.95051,246.79255 C 181.421,246.79255 181.75705,246.55908 181.95869,246.09111 L 182.94629,246.61701 C 182.47555,247.45339 181.76934,247.87168 180.82763,247.87168 C 180.10136,247.87168 179.51953,247.64899 179.08265,247.20409 C 178.64502,246.7587 178.42684,246.14477 178.42684,245.36206 C 178.42684,244.59313 178.65204,243.98271 179.10271,243.53056 C 179.55338,243.07838 180.11463,242.8524 180.7875,242.8524 C 181.78288,242.8524 182.49561,243.24465 182.92647,244.02835 L 181.85761,244.57559 z M 186.50398,244.57559 C 186.30184,244.13545 186.00567,243.91525 185.61517,243.91525 C 184.88839,243.91525 184.52474,244.39501 184.52474,245.35404 C 184.52474,246.31328 184.88839,246.79255 185.61517,246.79255 C 186.08642,246.79255 186.41644,246.55908 186.6048,246.09111 L 187.61447,246.61701 C 187.14448,247.45339 186.43926,247.87168 185.49931,247.87168 C 184.77403,247.87168 184.19346,247.64899 183.75683,247.20409 C 183.32096,246.7587 183.10254,246.14477 183.10254,245.36206 C 183.10254,244.59313 183.32422,243.98271 183.76737,243.53056 C 184.21026,243.07838 184.77404,242.8524 185.4592,242.8524 C 186.45282,242.8524 187.16455,243.24465 187.5939,244.02835 L 186.50398,244.57559 z" /></g></g><path id="icon-cc-by-nc-sa_text3743" d="M 357.4197,362.68502 C 357.66518,362.68502 357.85131,362.63144 357.9781,362.52427 C 358.10488,362.41711 358.16827,362.25904 358.16828,362.05005 C 358.16827,361.84377 358.10488,361.68704 357.9781,361.57986 C 357.85131,361.47002 357.66518,361.4151 357.4197,361.4151 L 356.55784,361.4151 L 356.55784,362.68502 L 357.4197,362.68502 M 357.4723,365.30926 C 357.78522,365.30926 358.0199,365.24363 358.17637,365.11235 C 358.33552,364.98107 358.4151,364.78281 358.4151,364.51758 C 358.4151,364.2577 358.33686,364.06346 358.18041,363.93485 C 358.02396,363.80358 357.78792,363.73793 357.4723,363.73793 L 356.55784,363.73793 L 356.55784,365.30926 L 357.4723,365.30926 M 358.92089,363.15119 C 359.25538,363.24765 359.51434,363.42581 359.69779,363.68569 C 359.88121,363.94557 359.97293,364.26439 359.97294,364.64215 C 359.97293,365.22086 359.776,365.6522 359.38217,365.93619 C 358.98833,366.22019 358.38947,366.36218 357.5856,366.36218 L 355.00001,366.36218 L 355.00001,360.36218 L 357.33878,360.36218 C 358.17771,360.36218 358.78466,360.48811 359.15962,360.73994 C 359.53727,360.99179 359.7261,361.39501 359.7261,361.94959 C 359.7261,362.24162 359.65732,362.49078 359.51975,362.69708 C 359.38217,362.9007 359.18255,363.05207 358.92089,363.15119 M 359.83746,360.36218 L 361.54096,360.36218 L 362.91671,362.50016 L 364.29245,360.36218 L 366,360.36218 L 363.69764,363.83438 L 363.69764,366.36218 L 362.13982,366.36218 L 362.13982,363.83438 L 359.83746,360.36218 M 365.15837,363.40839 L 367.69946,363.40839 L 367.69946,364.57785 L 365.15837,364.57785 L 365.15837,363.40839 M 368.9174,360.36218 L 370.65732,360.36218 L 372.85447,364.47738 L 372.85447,360.36218 L 374.33138,360.36218 L 374.33138,366.36218 L 372.59146,366.36218 L 370.3943,362.24698 L 370.3943,366.36218 L 368.9174,366.36218 L 368.9174,360.36218 M 380.65173,366.03264 C 380.36579,366.17999 380.0677,366.29118 379.75749,366.3662 C 379.44727,366.44122 379.12357,366.47872 378.78638,366.47872 C 377.78019,366.47872 376.98307,366.20009 376.395,365.64282 C 375.80693,365.08288 375.5129,364.32468 375.5129,363.36821 C 375.5129,362.40907 375.80693,361.65087 376.395,361.0936 C 376.98307,360.53366 377.78019,360.25368 378.78638,360.25367 C 379.12357,360.25368 379.44727,360.29119 379.75749,360.3662 C 380.0677,360.44122 380.36579,360.55241 380.65173,360.69976 L 380.65173,361.94156 C 380.36309,361.74597 380.0785,361.60265 379.79796,361.51155 C 379.5174,361.42046 379.22203,361.37492 378.91181,361.37491 C 378.35611,361.37492 377.91911,361.55174 377.6008,361.90538 C 377.28249,362.25904 377.12333,362.74665 377.12333,363.36821 C 377.12333,363.9871 377.28249,364.47337 377.6008,364.82702 C 377.91911,365.18067 378.35611,365.35749 378.91181,365.35749 C 379.22203,365.35749 379.5174,365.31195 379.79796,365.22086 C 380.0785,365.12976 380.36309,364.98643 380.65173,364.79085 L 380.65173,366.03264 M 381.82921,363.40839 L 384.3703,363.40839 L 384.3703,364.57785 L 381.82921,364.57785 L 381.82921,363.40839 M 389.79236,360.55107 L 389.79236,361.82099 C 389.46056,361.67364 389.13686,361.56245 388.82125,361.48743 C 388.50563,361.41242 388.20756,361.37492 387.92701,361.37491 C 387.55475,361.37492 387.2796,361.42581 387.10156,361.52762 C 386.92352,361.62943 386.8345,361.7875 386.83451,362.00183 C 386.8345,362.16259 386.89385,362.28851 387.01255,362.3796 C 387.13393,362.46801 387.35244,362.54437 387.66804,362.60866 L 388.33165,362.74129 C 389.00333,362.87525 389.4808,363.07886 389.76405,363.35214 C 390.04728,363.62541 390.1889,364.01389 390.18891,364.51758 C 390.1889,365.17933 389.99063,365.67229 389.5941,365.99647 C 389.20025,366.31797 388.59735,366.47872 387.78539,366.47872 C 387.40234,366.47872 387.01794,366.44255 386.63219,366.37022 C 386.24644,366.29788 385.86069,366.19072 385.47494,366.04871 L 385.47494,364.74262 C 385.86069,364.94624 386.23295,365.10029 386.59173,365.20478 C 386.9532,365.30658 387.30118,365.35749 387.63567,365.35749 C 387.97556,365.35749 388.23588,365.30123 388.41662,365.18871 C 388.59735,365.07618 388.68771,364.91543 388.68772,364.70646 C 388.68771,364.51891 388.62567,364.37424 388.50159,364.27242 C 388.38019,364.17062 388.13607,364.07954 387.76921,363.99915 L 387.1663,363.86653 C 386.56205,363.73793 386.11965,363.53298 385.83911,363.25167 C 385.56127,362.97035 385.42234,362.59125 385.42234,362.11435 C 385.42234,361.51691 385.61656,361.05743 386.00501,360.73592 C 386.39346,360.41443 386.95185,360.25368 387.68019,360.25367 C 388.01198,360.25368 388.35322,360.27914 388.70391,360.33003 C 389.05459,360.37826 389.4174,360.45194 389.79236,360.55107 M 395.22657,365.26908 L 392.79069,365.26908 L 392.40629,366.36218 L 390.84037,366.36218 L 393.07798,360.36218 L 394.93524,360.36218 L 397.17286,366.36218 L 395.60693,366.36218 L 395.22657,365.26908 M 393.17914,364.15588 L 394.83409,364.15588 L 394.00863,361.76875 L 393.17914,364.15588" style="font-size:8.26px;font-style:normal;font-weight:700;fill:#fff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:\'Bitstream Vera Sans\'" /></g></g></symbol>'});l.a.add(p),t.default=p},"7f85":function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},function(){this.$createElement;return this._self._c,this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hr"),a("h1",[s._v("响应式 Web 概念")]),a("p",[s._v("响应式 Web 设计是一个让用户通过各种尺寸的设备浏览网站获得良好的视觉效果的方法。")]),a("p",[s._v("例如，您先在计算机显示器上浏览一个网站，然后在智能手机上浏览，智能手机的屏幕尺寸远小于计算机显示器，但是你却没有感觉到任何差别，两者的用户体验几乎一样，这说明这个网站在响应式设计方面做得很好。")]),a("h1",[s._v("方法")]),a("h2",[s._v("设置 Meta 标签")]),a("p",[s._v("大多数移动浏览器将 HTML 页面放大为宽的视图以符合屏幕分辨率。你可以使用视图的 meta 标签来进行重置。下面的视图标签告诉浏览器，使用设备的宽度作为视图宽度并禁止初始的缩放。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("meta")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"viewport"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("content")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no"')]),s._v("\n/>")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("meta")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("http-equiv")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"X-UA-Compatible"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("content")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"IE=edge,chrome=1"')]),s._v(" />")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("meta")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"HandheldFriendly"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("content")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"true"')]),s._v(" />")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \nwidth=device-width--宽度为设备宽度\n如果你的页面宽度小于设备宽度，就需要修改一下这个属性，不然的话会出现可以页面左右滑动\n\ninitial-scale - 初始的缩放比例\n\nminimum-scale - 允许用户缩放到的最小比例   \n\nmaximum-scale - 允许用户缩放到的最大比例  \n\nuser-scalable - 用户是否可以手动缩放\n--\x3e")]),s._v("\n")])]),a("h2",[s._v("通过媒介查询来设置样式")]),a("p",[s._v("Media Queries 是响应式设计的核心，它根据条件告诉浏览器如何为指定视图宽度渲染页面。")]),a("p",[s._v("@media 引入")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("@media screen and (min-width: 1200px) {\n  /* 如果视窗宽度 >= 1200px，將会加载此 CSS。 */\n}\n@media screen and (min-width: 768px) and (max-width: 979px) {\n  /* 如果视窗宽度介于 768px ~ 979px，将会载入此 CSS。 */\n}\n@media screen and (max-width: 767px) {\n  /* 如果视窗宽度 <= 768px，将会载入此 CSS。 */\n}\n@media screen and (max-device-width: 480px) {\n  /* 若视窗宽度 <= 480px，则载入此CSS。 */\n}\n")])]),a("p",[s._v("link 方法引入")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("link")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("rel")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"stylesheet"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("media")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"screen and (max-width: 600px)"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("href")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"small.css"')]),s._v(" />")]),s._v("\n")])]),a("blockquote",[a("p",[s._v("补充：media query 中的 not、only、all 等关键字")]),a("p",[s._v("not: not 是用来排除掉某些特定的设备的，比如 @media not print（非打印设备）")]),a("p",[s._v("only: 用来定某种特别的媒体类型。对于支持 Media Queries 的移动设备来说，如果存在 only 关键字，移动设备的 Web 浏览器会忽略 only 关键字并直接根据后面的表达式应用样式文件。对于不支持 Media Queries 的设备但能够读取 Media Type 类型的 Web 浏览器，遇到 only 关键字时会忽略这个样式文件。")]),a("p",[s._v("all: 所有设备，这个应该经常看到")])]),a("h2",[s._v("字体设置")]),a("p",[s._v("一个响应式的字体应关联它的父容器的宽度，这样才能适应客户端屏幕。")]),a("p",[s._v("1、确定基数：一般 10px，自己记住就行，不用写进代码里")]),a("p",[s._v("2、html {font-size:百分数;} 百分数=基数/16")]),a("p",[s._v("基数 10 百分数 62.5%")]),a("p",[s._v("基数 14 百分数 87.5%")]),a("p",[s._v("3、px 换算 rem 公式=想要的 px 值/基数")]),a("p",[s._v("也就是说，当你设置 html {font-size:62.5%;}，你想给容器里的文字设置字号 14px，换算成 rem 就是 14px/10——1.4rem 这样子")]),a("p",[s._v("如果使用 em 单位的时候，计算机就会自己去找你 body 设置的字体大小")]),a("p",[s._v("body {font-size:14px;} 这样设置后，如果我想要一个 14px 的外边距，我就用 14px/14px——1em 这样啦。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("html {\n  font-size: 100%;\n}\n/* 完成后，你可以定义响应式字体： */\n@media (min-width: 640px) {\n  body {\n    font-size: 1rem;\n  }\n}\n@media (min-width: 960px) {\n  body {\n    font-size: 1.2rem;\n  }\n}\n@media (min-width: 1200px) {\n  body {\n    font-size: 1.5rem;\n  }\n}\n")])]),a("h2",[s._v("图片自适应")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v(".img-responsive {\n  display: inline-block;\n  height: auto;\n  max-width: 100%;\n}\n\n/* 可以让图像按比例缩放，不超过其父元素的尺寸。 */\n")])]),a("h2",[s._v("百分比")]),a("p",[s._v("一般的子元素的百分比完全相对于直接父元素，height 百分比相对于 height，width 百分比相对于 width。")]),a("p",[s._v("以下是特殊的情况：")]),a("p",[s._v("1、子元素的 top 和 bottom、left、right 如果设置百分比，则相对于直接非 static 定位(默认定位)的父元素的高度")]),a("p",[s._v("2、padding 和 margin 都是只相对直接父元素的 width。")]),a("p",[s._v("3、border- radius 是相对于自身的宽度。")]),a("blockquote",[a("p",[s._v("导言:")]),a("p",[s._v("通过媒体查询，可以通过给不同分辨率的设备编写不同的样式来实现响应式的布局。")]),a("p",[s._v("但是媒体查询的缺点也很明显，需要改变的样式太多的话，那么多套样式代码会很繁琐。")])])])}],!1,null,null,null);t.default=e.exports},8814:function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},function(){this.$createElement;return this._self._c,this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hr"),a("h1",[s._v("技术")]),a("blockquote",[a("p",[a("strong",[s._v("掘金")]),s._v(" > > > "),a("a",{attrs:{href:"https://juejin.im/welcome/frontend"}},[s._v("https://juejin.im/welcome/frontend")])]),a("p",[a("strong",[s._v("思否")]),s._v(" > > > "),a("a",{attrs:{href:"https://segmentfault.com"}},[s._v("https://segmentfault.com")])]),a("p",[a("strong",[s._v("语雀")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.yuque.com/explore/headlines"}},[s._v("https://www.yuque.com/explore/headlines")])]),a("p",[a("strong",[s._v("前端开发日报")]),s._v(" > > > "),a("a",{attrs:{href:"http://caibaojian.com/c/news"}},[s._v("http://caibaojian.com/c/news")])]),a("p",[a("strong",[s._v("小程序社区")]),s._v(" > > > "),a("a",{attrs:{href:"http://www.wxapp-union.com/portal.php"}},[s._v("http://www.wxapp-union.com/portal.php")])]),a("p",[a("strong",[s._v("W3cplus")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.w3cplus.com"}},[s._v("https://www.w3cplus.com")])]),a("p",[a("strong",[s._v("WEB 开发速查表")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.html.cn/dev"}},[s._v("https://www.html.cn/dev")])]),a("p",[a("strong",[s._v("Can I use")]),s._v(" > > > "),a("a",{attrs:{href:"https://caniuse.com/#tables"}},[s._v("https://caniuse.com/#tables")])]),a("p",[a("strong",[s._v("凹凸实验室")]),s._v(" > > > "),a("a",{attrs:{href:"https://aotu.io/index.html"}},[s._v("https://aotu.io/index.html")])]),a("p",[a("strong",[s._v("开发者手册")]),s._v(" > > > "),a("a",{attrs:{href:"https://cloud.tencent.com/developer/devdocs"}},[s._v("https://cloud.tencent.com/developer/devdocs")])]),a("p",[a("strong",[s._v("THX")]),s._v(" > > > "),a("a",{attrs:{href:"https://thx.github.io"}},[s._v("https://thx.github.io")])]),a("p",[a("strong",[s._v("jQuery之家")]),s._v(" > > > "),a("a",{attrs:{href:"http://www.htmleaf.com"}},[s._v("http://www.htmleaf.com")])]),a("p",[a("strong",[s._v("F2EX")]),s._v(" > > > "),a("a",{attrs:{href:"http://f2ex.cn"}},[s._v("http://f2ex.cn")])]),a("p",[a("strong",[s._v("CodePen")]),s._v(" > > > "),a("a",{attrs:{href:"https://codepen.io"}},[s._v("https://codepen.io")])])]),a("h1",[s._v("设计")]),a("blockquote",[a("p",[a("strong",[s._v("阿里巴巴矢量图标库")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.iconfont.cn"}},[s._v("https://www.iconfont.cn")])]),a("p",[a("strong",[s._v("酷站")]),s._v(" > > > "),a("a",{attrs:{href:"http://cool.mfdemo.cn"}},[s._v("http://cool.mfdemo.cn")])]),a("p",[a("strong",[s._v("UI中国")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.ui.cn"}},[s._v("https://www.ui.cn")])]),a("p",[a("strong",[s._v("设计导航")]),s._v(" > > > "),a("a",{attrs:{href:"http://hao.shejidaren.com/index.html"}},[s._v("http://hao.shejidaren.com/index.html")])]),a("p",[a("strong",[s._v("MFD设计导航")]),s._v(" > > > "),a("a",{attrs:{href:"http://mfchange.cn"}},[s._v("http://mfchange.cn")])]),a("p",[a("strong",[s._v("腾讯设计导航")]),s._v(" > > > "),a("a",{attrs:{href:"http://hao.shejidaren.com/index.html"}},[s._v("http://hao.shejidaren.com/index.html")])]),a("p",[a("strong",[s._v("堆糖")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.duitang.com"}},[s._v("https://www.duitang.com")])]),a("p",[a("strong",[s._v("颜色盒")]),s._v(" > > > "),a("a",{attrs:{href:"https://www.colorbox.io"}},[s._v("https://www.colorbox.io")])]),a("p",[a("strong",[s._v("颜色搭配")]),s._v(" > > > "),a("a",{attrs:{href:"https://colorhunt.co/hot"}},[s._v("https://colorhunt.co/hot")])]),a("p",[a("strong",[s._v("HiPPTer")]),s._v(" > > > "),a("a",{attrs:{href:"http://www.hippter.com"}},[s._v("http://www.hippter.com")])])])])}],!1,null,null,null);t.default=e.exports},"89a2":function(s,t,a){"use strict";var r=a("42ec");a.n(r).a},"8bbf":function(s,t){s.exports=Vue},"9feb":function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},function(){this.$createElement;return this._self._c,this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hr"),a("h1",[s._v("一、Async/await")]),a("p",[s._v("ES7 提供了 async 函数，使得异步操作变得更加方便。async 函数是什么？")]),a("p",[s._v("一句话，async 函数就是 Generator 函数的语法糖。")]),a("h2",[s._v("Async functions")]),a("ul",[a("li",[s._v("这个函数总是返回一个 "),a("strong",[s._v("promise")]),s._v("，如果代码中有 return "),a("strong",[s._v("<非 promise>语句")]),s._v("，JavaScript 会自动把返回的这个 value 值包装成 promise 的 "),a("strong",[s._v("resolved")]),s._v(" 值。当 async 函数抛出异常时，promise 的 "),a("strong",[s._v("reject")]),s._v(" 方法也会传递这个异常值。")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n}\nf().then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("e")]),s._v(" =>")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(e) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1")]),s._v("\n})\n")])]),a("h2",[s._v("Await")]),a("ul",[a("li",[s._v("async 函数中可能会有 "),a("strong",[s._v("await")]),s._v(" 表达式，这会使 async 函数"),a("strong",[s._v("暂停")]),s._v("执行，等待 Promise 的结果出来，然后"),a("strong",[s._v("恢复")]),s._v(" async 函数的执行并返回解析值（resolved）。")])]),a("blockquote",[a("p",[s._v("注意：await 只能在 async 函数内部使用")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" promise = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n    setTimeout("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" resolve("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'done!'")]),s._v("), "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1000")]),s._v(")\n  })\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" result = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" promise "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 直到promise返回一个resolve值")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(result) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'done!'")]),s._v("\n}\nf()\n")])]),a("p",[s._v("函数执行到 await promise 行会暂停，当 promise 处理完成后重新恢复运行， resolve 的值成了最终的 result，所以上面的代码会在 1s 后输出'done!'。")]),a("p",[s._v("我们强调一下：await 字面上使得 JavaScript 等待，直到 promise 处理完成，然后将结果继续下去。")]),a("p",[s._v("但这并不会花费任何的 cpu 资源，因为引擎能够同时做其他工作：执行其他脚本，处理事件等等。")]),a("hr"),a("h1",[s._v("二、错误处理")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" response = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" fetch("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'/no-user-here'")]),s._v(")\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" user = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" response.json()\n    } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(err) {\n        "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 在fetch和response.json中都能捕获错误")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(err)\n    }\n}\nf()\n\n-----------------分割线-----------------\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//如果我们不使用try-catch，然后async函数f()的调用产生的promise变成reject状态的话，我们可以添加.catch去处理它。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" response = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" fetch("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'http://no-such-url'")]),s._v(")\n}\nf().\ncatch ("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("e")]),s._v(" =>")]),s._v(" {\n\t"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(e)  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: failed to fetch")]),s._v("\n})\n")])]),a("blockquote",[a("p",[s._v("async 函数是非常新的语法功能，新到都不属于 ES6，而是属于 ES7。目前，它仍处于提案阶段，但是转码器 Babel 和 regenerator 都已经支持，转码后就能使用。")])]),a("h2",[s._v("Async 函数的多种使用形式")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 函数声明")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("foo")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 函数表达式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" foo = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 对象的方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" foo() {} }\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 箭头函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" foo = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" () => {}\n")])]),a("h2",[s._v("Async 与 Promise、Generator 的比较")]),a("p",[s._v("我们通过一个例子，来看 Async 函数与 Promise、Generator 函数的区别。")]),a("p",[s._v("假定某个 DOM 元素上面，部署了一系列的动画，前一个动画结束，才能开始后一个。如果当中有一个动画出错，就不再往下执行，返回上一个成功执行的动画的返回值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chainAnimationsPromise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("elem, animations")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Promise的写法")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 变量ret用来保存上一个动画的返回值")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" ret = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 新建一个空的Promise")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v(".resolve()\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 使用then方法，添加所有动画")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" anim "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" animations) {\n    p = p.then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(") ")]),s._v("{\n      ret = val\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" anim(elem)\n    })\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 返回一个部署了错误捕捉机制的Promise")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" p\n    .catch("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("e")]),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 忽略错误，继续执行 */")]),s._v("\n    })\n    .then("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" ret\n    })\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chainAnimationsGenerator")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("elem, animations")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Generator的写法")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" spawn("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("*("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" ret = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" anim "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" animations) {\n        ret = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" anim(elem)\n      }\n    } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (e) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 忽略错误，继续执行 */")]),s._v("\n    }\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" ret\n  })\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chainAnimationsAsync")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("elem, animations")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Async的写法")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" ret = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" anim "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" animations) {\n      ret = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" anim(elem)\n    }\n  } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (e) {\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 忽略错误，继续执行 */")]),s._v("\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" ret\n}\n")])]),a("p",[s._v("可以看到 Async 函数的实现最简洁，最符合语义，几乎没有语义不相关的代码。它将 Generator 写法中的自动执行器，改在语言层面提供，不暴露给用户，因此代码量最少。如果使用 Generator 写法，自动执行器需要用户自己提供。")]),a("p",[s._v("上一段代码的 spawn 函数就是自动执行器,下面给出 spawn 函数的实现:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("spawn")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("genF")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" gen = genF()\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("step")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("nextF")]),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" next = nextF()\n      } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (e) {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" reject(e)\n      }\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (next.done) {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" resolve(next.value)\n      }\n      "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Promise")]),s._v(".resolve(next.value).then(\n        "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("v")]),s._v(") ")]),s._v("{\n          step("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" gen.next(v)\n          })\n        },\n        "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("e")]),s._v(") ")]),s._v("{\n          step("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" gen.throw(e)\n          })\n        }\n      )\n    }\n    step("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" gen.next("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(")\n    })\n  })\n}\n")])])])}],!1,null,null,null);t.default=e.exports},a383:function(s,t,a){var r={"./Async.md":["9feb"],"./Iterator.md":["f2b5"],"./Promise.md":["6a8a"],"./amway.md":["8814"],"./响应式布局.md":["7f85"]};function e(s){var t=r[s];return t?Promise.all(t.slice(1).map(a.e)).then(function(){var s=t[0];return a(s)}):Promise.resolve().then(function(){var t=new Error("Cannot find module '"+s+"'");throw t.code="MODULE_NOT_FOUND",t})}e.keys=function(){return Object.keys(r)},e.id="a383",s.exports=e},cebe:function(s,t){s.exports=axios},cfd9:function(s,t,a){var r={"./404.svg":"eb2b","./antDesign.svg":"0a5e","./blogroll.svg":"4ea0","./cc-by-nc-sa.svg":"7e2e","./github.svg":"76f4"};function e(s){var t=n(s);return a(t)}function n(s){var t=r[s];if(t+1)return t;var a=new Error("Cannot find module '"+s+"'");throw a.code="MODULE_NOT_FOUND",a}e.keys=function(){return Object.keys(r)},e.resolve=n,(s.exports=e).id="cfd9"},d203:function(s,t,a){var r={"./Async.md":"9feb","./Iterator.md":"f2b5","./Promise.md":"6a8a","./amway.md":"8814","./响应式布局.md":"7f85"};function e(s){var t=n(s);return a(t)}function n(s){var t=r[s];if(t+1)return t;var a=new Error("Cannot find module '"+s+"'");throw a.code="MODULE_NOT_FOUND",a}e.keys=function(){return Object.keys(r)},e.resolve=n,(s.exports=e).id="d203"},eb2b:function(s,t,a){"use strict";a.r(t);var r=a("e017"),e=a.n(r),n=a("21a1"),l=a.n(n),p=new e.a({id:"icon-404",use:"icon-404-usage",viewBox:"350 447.4 323.9 129.2",content:'<symbol xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="350 447.4 323.9 129.2" id="icon-404"><g><path d="M484.7,570.5c-13.3-13.3-15.7-29.6-16.4-46.3c-0.7-16.1-0.7-32.1,4-47.8c4.4-14.5,13.3-24.6,28.4-27.6c15.5-3.1,30.2-1.5,41.9,10.9c6.2,6.6,9.2,14.8,10.7,23.6c3.8,22.9,4.2,45.8-2.3,68.4c-2,7.1-6.2,12.9-11.3,18.1c-0.4,0.4-0.7,0.6-1.4,0.8c0.4,0.1,4.4,0,4.5,0c6.9,0.1,13.7-0.1,20.6-0.1c2.1,0,3.9,0.4,3.9,3c0,2.4-1.5,3.1-3.8,3.1c-12.2,0-24.4,0-36.5,0c-2,0-3.4-0.4-3.8-2.7c-0.4-2.1,0.9-3,2.6-3.6c9.8-3.2,15.6-10.2,19-19.6c3.2-8.8,4.3-17.9,4.6-27.1c0.5-16.9,1-33.8-5.3-50c-3.6-9.4-10.3-16.2-20.1-18.4c-14-3.2-27.6-2.8-38.3,8.9c-6,6.6-8.3,14.9-9.6,23.3c-2.6,18-2.6,36,0.5,54c0.8,4.6,2.3,9.2,4.3,13.5c3.6,7.5,9.2,12.8,17.2,15.4c1.9,0.6,3.2,1.4,2.9,3.7c-0.4,2.2-1.9,2.5-3.9,2.5c-12.1,0-24.1,0-36.2,0c-2.3,0-4.1-0.4-4.2-3c0-2.8,2-3.1,4.2-3.1C468.4,570.4,476.1,570.5,484.7,570.5z" /></g><g><path d="M433.9,570.6c0-8,0-15,0-22c4,0,8.3,0,12.5,0c2.5,0,3.5-1.5,3.5-4c0-4,0-7.9,0-11.9c0-2.4-1-3.2-3.5-3.3c-1.3-0.1-2.6,0.2-3.9,0.2c-2.8,0-5.6,0-8.4,0c-0.7-1-0.2-2.2-0.2-3c0-23.9,0-47.7,0-71.6c0-0.8,0-1.6,0-2.4c-0.3-2.1-1.3-3-3.3-3c-3.8,0-7.7,0.1-11.5-0.1c-1.6-0.1-2.5,0.6-3.2,1.7c-4,6.6-8.7,12.7-13,19c-3.7,5.4-7.5,10.7-11.3,16c-3.2,4.5-6.3,9.3-9.5,13.8c-2.6,3.7-5.1,7.5-7.8,11.1c-2.8,3.8-5.4,7.7-8.1,11.6c-1.4,2-2.8,4.1-4.3,6c-0.7,0.8-1,1.6-1,2.5c0,4.7,0,9.3,0,14c0,2.8,0.4,3.4,3.2,3.4c15.8,0,31.7,0,47.5,0c0.6,0,1.3,0,2.3,0c0,7,0,14.4,0,22c-2,0-2.7,0-3.9,0c-18.2,0-36.3,0-54.5,0c-0.7,0-1.4,0-2.1,0c-2.3,0.2-3.4,1-3.4,3c0,2.1,1.1,3,3.6,3c19.9,0,39.8,0,59.7,0c1.2,0,2.3,0,3.5,0c2,0,3.1-0.8,3.1-2.9c0-9.4,0-18.9,0-28.3c0-2.2-0.9-3.5-3.1-3.7c-0.8-0.1-1.6-0.1-2.4-0.1c-14.7,0-29.3,0-44,0c-0.9,0-1.5,0-2.5,0c0-1,0-3.1,0-4.7c0-1.7-0.5-3.6,0.1-5.1c0.8-1.9,2.1-3.6,3.5-5.1c2-2.3,3.2-5,5.1-7.4c2.4-3,4.4-6.4,6.7-9.5c3.4-4.5,6.4-9.2,9.5-13.8c2.1-3,4.2-5.9,6.3-8.9c0.9-1.3,1.6-2.6,2.5-3.9c4.2-5.9,8.3-11.9,12.4-17.9c2-2.8,3.7-6,6-8.6c0.3-0.4,0.3-1.1,1-1.1c2.2,0,4,0,7,0c0,2,0,2.9,0,4c0,23.7,0,47.5,0,71.2c0,0.7,0,1.4,0,2.1c0,1.5,1,2.7,2.6,2.7c4.3,0,8.4,0,13.4,0c0,2.1,0,4,0,6c-4,0-7.4,0-10.9,0c-0.7,0-1.4,0-2.1,0c-2.4,1-3,1.5-3,3.9c0,9.3,0,18.6,0,27.9c0,2.5,0.6,3.2,3.2,3.2c9.1,0,18.2,0,27.2,0c1.2,0,2.2,0.1,2.8-1.3c0.8-1.7,0.9-2.1-0.1-3.5c-0.7-0.9-1.6-1.2-2.8-1.2c-1.5,0-3,0-4.5,0C447.1,570.6,440.9,570.6,433.9,570.6z" /></g><g><path d="M590,570.6c0-8,0-15,0-22c-4,0-8.2,0-12.4,0c-2.5,0-3.6-1.5-3.6-4c0-4,0-7.9,0-11.9c0-2.4,1.1-3.2,3.6-3.3c1.3-0.1,2.7,0.2,3.9,0.2c2.8,0,5.6,0,8.4,0c0.7-1,0.1-2.2,0.1-3c0-23.9,0-47.7,0-71.6c0-0.8,0-1.6,0.1-2.4c0.3-2.1,1.3-3,3.3-3c3.8,0,7.7,0.1,11.5-0.1c1.6-0.1,2.5,0.6,3.2,1.7c4,6.6,8.7,12.7,13,19c3.7,5.4,7.5,10.7,11.3,16c3.2,4.5,6.3,9.3,9.5,13.8c2.6,3.7,5.1,7.5,7.8,11.1c2.8,3.8,5.4,7.7,8.1,11.6c1.4,2,2.7,4.1,4.2,6c0.7,0.8,0.9,1.6,0.9,2.5c0,4.7,0,9.3,0,14c0,2.8-0.3,3.4-3.1,3.4c-15.8,0-31.7,0-47.5,0c-0.6,0-1.4,0-2.4,0c0,7,0,14.4,0,22c2,0,2.8,0,4,0c18.2,0,36.3,0,54.5,0c0.7,0,1.4,0,2.1,0c2.3,0.2,3.4,1,3.4,3c0,2.1-1.1,3-3.6,3c-19.9,0-39.8,0-59.7,0c-1.2,0-2.3,0-3.5,0c-2,0-3.2-0.8-3.2-2.9c0-9.4,0-18.9,0-28.3c0-2.2,0.9-3.5,3.1-3.7c0.8-0.1,1.7-0.1,2.5-0.1c14.7,0,29.3,0,44,0c0.9,0,1.4,0,2.4,0c0-1,0-3.1,0-4.7c0-1.7,0.6-3.6,0-5.1c-0.8-1.9-2.1-3.6-3.5-5.1c-2-2.3-3.2-5-5.1-7.4c-2.4-3-4.4-6.4-6.7-9.5c-3.4-4.5-6.4-9.2-9.5-13.8c-2.1-3-4.2-5.9-6.3-8.9c-0.9-1.3-1.6-2.6-2.5-3.9c-4.2-5.9-8.3-11.9-12.4-17.9c-2-2.8-3.7-6-6-8.6c-0.3-0.4-0.3-1.1-1-1.1c-2.2,0-4.1,0-7.1,0c0,2,0,2.9,0,4c0,23.7,0,47.5,0,71.2c0,0.7,0,1.4,0,2.1c0,1.5-0.9,2.7-2.5,2.7c-4.3,0-8.5,0-13.5,0c0,2.1,0,4,0,6c4,0,7.5,0,11,0c0.7,0,1.4,0,2.1,0c2.4,1,2.9,1.5,2.9,3.9c0,9.3,0,18.6,0,27.9c0,2.5-0.5,3.2-3.1,3.2c-9.1,0-18.2,0-27.2,0c-1.2,0-2.2,0.1-2.8-1.3c-0.8-1.7-0.9-2.1,0.1-3.5c0.7-0.9,1.6-1.2,2.8-1.2c1.5,0,3,0,4.5,0C576.8,570.6,583,570.6,590,570.6z" /></g></symbol>'});l.a.add(p),t.default=p},f2b5:function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},function(){this.$createElement;return this._self._c,this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hr"),a("h1",[s._v("一、理解 Iterator(遍历器)")]),a("p",[s._v("JavaScript 原有的表示“集合”的数据结构，主要是"),a("strong",[s._v("数组")]),s._v("（Array）和"),a("strong",[s._v("对象")]),s._v("（Object），ES6 又添加了"),a("strong",[s._v("Map")]),s._v("和"),a("strong",[s._v("Set")]),s._v("。这样就有了四种数据集合，用户还可以组合使用它们，定义自己的数据结构，比如数组的成员是 Map，Map 的成员是对象。这样就需要一种统一的接口机制，来处理所有不同的数据结构。")]),a("p",[s._v("遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。")]),a("p",[s._v("Iterator 的作用有三个：")]),a("ul",[a("li",[s._v("为各种数据结构，提供一个统一的、简便的访问接口")]),a("li",[s._v("使得数据结构的成员能够按某种次序排列")]),a("li",[s._v("ES6 创造了一种新的遍历命令 for...of 循环，Iterator 接口主要供 for...of 消费")])]),a("p",[s._v("Iterator 的遍历过程是这样的。")]),a("blockquote",[a("p",[s._v("（1）创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。")]),a("p",[s._v("（2）第一次调用指针对象的 next 方法，可以将指针指向数据结构的第一个成员。")]),a("p",[s._v("（3）第二次调用指针对象的 next 方法，指针就指向数据结构的第二个成员。")]),a("p",[s._v("（4）不断调用指针对象的 next 方法，直到它指向数据结构的结束位置。")])]),a("p",[s._v("每一次调用 "),a("strong",[s._v("next")]),s._v(" 方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含 "),a("strong",[s._v("value")]),s._v(" 和 "),a("strong",[s._v("done")]),s._v(" 两个属性的对象。其中，"),a("strong",[s._v("value")]),s._v(" 属性是当前成员的值，"),a("strong",[s._v("done")]),s._v(" 属性是一个布尔值，表示遍历是否结束。")]),a("p",[s._v("下面是一个模拟 next 方法返回值的例子:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" it = makeIterator(["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v("])\nit.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { value: "a", done: false }')]),s._v("\nit.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { value: "b", done: false }')]),s._v("\nit.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: undefined, done: true }")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("makeIterator")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("array")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" nextIndex = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("next")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" nextIndex < array.length\n        ? { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": array[nextIndex++], "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" }\n        : { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" }\n    }\n  }\n}\n")])]),a("p",[s._v("上面代码定义了一个 makeIterator 函数，它是一个遍历器生成函数，作用就是返回一个遍历器对象。对数组['a', 'b']执行这个函数，就会返回该数组的遍历器对象（即指针对象）it。")]),a("p",[s._v("指针对象的 next 方法，用来移动指针。开始时，指针指向数组的开始位置。然后，每次调用 next 方法，指针就会指向数组的下一个成员。第一次调用，指向 a；第二次调用，指向 b。")]),a("p",[s._v("next 方法返回一个对象，表示当前数据成员的信息。这个对象具有 value 和 done 两个属性，value 属性返回当前位置的成员，done 属性是一个布尔值，表示遍历是否结束，即是否还有必要再一次调用 next 方法。")]),a("p",[s._v("总之，调用指针对象的 next 方法，就可以遍历事先给定的数据结构。")]),a("p",[s._v("在 ES6 中，有些数据结构原生具备 Iterator 接口（比如数组），即不用任何处理，就可以被 for...of 循环遍历，有些就不行（比如对象）。原因在于，这些数据结构原生部署了 "),a("strong",[s._v("Symbol.iterator")]),s._v(" 属性，另外一些数据结构没有。凡是部署了 "),a("strong",[s._v("Symbol.iterator")]),s._v(" 属性的数据结构，就称为部署了遍历器接口。调用这个接口，就会返回一个遍历器对象。")]),a("hr"),a("h1",[s._v("二、数据结构的默认 Iterator 接口")]),a("p",[s._v("Iterator 接口的目的，就是为所有数据结构，提供了一种统一的访问机制，即 for...of 循环。当使用 for...of 循环遍历某种数据结构时，该循环会自动去寻找 Iterator 接口。")]),a("p",[s._v("ES6 规定，默认的 Iterator 接口部署在数据结构的 Symbol.iterator 属性，或者说，一个数据结构只要具有 Symbol.iterator 属性，就可以认为是“可遍历的”（iterable）。调用 Symbol.iterator 方法，就会得到当前数据结构默认的遍历器生成函数。Symbol.iterator 本身是一个表达式，返回 Symbol 对象的 iterator 属性，这是一个预定义好的、类型为 Symbol 的特殊值，所以要放在方括号内。")]),a("p",[s._v("在 ES6 中，有三类数据结构原生具备 Iterator 接口：数组、某些类似数组的对象、Set 和 Map 结构。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v("]\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" iter = arr["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]()\n\niter.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 'a', done: false }")]),s._v("\niter.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 'b', done: false }")]),s._v("\niter.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 'c', done: false }")]),s._v("\niter.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: undefined, done: true }")]),s._v("\n")])]),a("p",[s._v("上面代码中，变量 arr 是一个数组，原生就具有遍历器接口，部署在 arr 的 Symbol.iterator 属性上面。所以，调用这个属性，就得到遍历器对象。")]),a("p",[s._v("上面提到，原生就部署 Iterator 接口的数据结构有三类，对于这三类数据结构，不用自己写遍历器生成函数，for...of 循环会自动遍历它们。除此之外，其他数据结构（主要是对象）的 Iterator 接口，都需要自己在 Symbol.iterator 属性上面部署，这样才会被 for...of 循环遍历。")]),a("p",[s._v("对象（Object）之所以没有默认部署 Iterator 接口，是因为对象的哪个属性先遍历，哪个属性后遍历是不确定的，需要开发者手动指定。本质上，遍历器是一种线性处理，对于任何非线性的数据结构，部署遍历器接口，就等于部署一种线性转换。不过，严格地说，对象部署遍历器接口并不是很必要，因为这时对象实际上被当作 Map 结构使用，ES5 没有 Map 结构，而 ES6 原生提供了。")]),a("p",[s._v("一个对象如果要有可被 for...of 循环调用的 Iterator 接口，就必须在 Symbol.iterator 的属性上部署遍历器生成方法（原型链上的对象具有该方法也可）。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("RangeIterator")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("(start, stop) {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".value = start\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".stop = stop\n  }\n\n  ["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]() {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("\n  }\n\n  next() {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" value = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".value\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (value < "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".stop) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".value++\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": value }\n    } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" }\n    }\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("range")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("start, stop")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" RangeIterator(start, stop)\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" range("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(")) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(value) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 0 , 1 , 2")]),s._v("\n}\n")])]),a("p",[s._v("上面代码是一个类部署 Iterator 接口的写法。Symbol.iterator 属性对应一个函数，执行后返回当前对象的遍历器对象。")]),a("p",[s._v("下面是通过遍历器实现指针结构的例子:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Obj")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".value = value\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".next = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n}\n\nObj.prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterator = {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("next")]),s._v(": next\n  }\n\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" current = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("next")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (current) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" value = current.value\n      current = current.next\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": value\n      }\n    } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n      }\n    }\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" iterator\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" one = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Obj("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" two = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Obj("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" three = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Obj("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(")\n\none.next = two\ntwo.next = three\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" one) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(i) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1 , 2 , 3")]),s._v("\n}\n")])]),a("p",[s._v("上面代码首先在构造函数的原型链上部署 Symbol.iterator 方法，调用该方法会返回遍历器对象 iterator，调用该对象的 next 方法，在返回一个值的同时，自动将内部指针移到下一个实例。")]),a("p",[s._v("为对象添加 Iterator 接口的例子：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("data")]),s._v(": ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'world'")]),s._v("],\n  ["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]() {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" self = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" index = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n      next() {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (index < self.data.length) {\n          "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n            "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": self.data[index++],\n            "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n          }\n        } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n          "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" }\n        }\n      }\n    }\n  }\n}\n")])]),a("p",[s._v("对于类似数组的对象（存在"),a("strong",[s._v("数值键名")]),s._v("和 "),a("strong",[s._v("length 属性")]),s._v("），部署 Iterator 接口，有一个简便方法，就是 Symbol.iterator 方法直接引用数组的 Iterator 接口。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("NodeList.prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 或者")]),s._v("\nNodeList.prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = []["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]\n\n[...document.querySelectorAll("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(")] "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 可以执行了")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 示例 ↓")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" iterable = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("length")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(",\n  ["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]: "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" item "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" iterable) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(item); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// a , b , c")]),s._v("\n}\n")])]),a("p",[s._v("但是请记住，这个方法仅仅适用于类数组对象，上面的也可以直接用 Array.from(iterable)转换成数组来遍历，例如：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arrayLike = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("length")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".from(arrayLike)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// a , b")]),s._v("\n}\n")])]),a("hr"),a("h1",[s._v("三、调用 Iterator 接口的场合")]),a("h2",[s._v("解构赋值")]),a("p",[s._v("对数组和 Set 结构进行解构赋值时，会默认调用 Symbol.iterator 方法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" = new Set()\n  .add('a')\n  .add('b')\n  .add('c')\n\nlet [x, y] = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v("\n// x='a'; y='b'\n\nlet [first, ...rest] = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v("\n// first='a'; rest=['b','c']\n")])]),a("h2",[s._v("扩展运算符")]),a("p",[s._v("扩展运算符（...）也会调用默认的 iterator 接口。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 例一")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" str = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("\n[...str] "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//  ['h','e','l','l','o']")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 例二")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v("]\n["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", ...arr, "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'d'")]),s._v("]\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['a', 'b', 'c', 'd']")]),s._v("\n")])]),a("p",[s._v("也就是说，只要某个数据结构部署了 Iterator 接口，就可以对它使用扩展运算符，将其转为数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = [...iterable]\n")])]),a("h2",[s._v("yield*")]),a("p",[s._v("yield*后面跟的是一个可遍历的结构，它会调用该结构的遍历器接口。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" generator = "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("*("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v("* ["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("]\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterator = generator()\n\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 1, done: false }")]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 2, done: false }")]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 3, done: false }")]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 4, done: false }")]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: 5, done: false }")]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: undefined, done: true }")]),s._v("\n")])]),a("h2",[s._v("其他场合")]),a("p",[s._v("由于数组的遍历会调用遍历器接口，所以任何接受数组作为参数的场合，其实都调用了遍历器接口。下面是一些例子。")]),a("ul",[a("li",[s._v("for...of")]),a("li",[s._v("Array.from()")]),a("li",[s._v("Map(), Set(), WeakMap(), WeakSet()（比如 new Map([['a',1],['b',2]])）")]),a("li",[s._v("Promise.all()")]),a("li",[s._v("Promise.race()")])]),a("hr"),a("h1",[s._v("四、字符串的 Iterator 接口")]),a("p",[s._v("字符串是一个类似数组的对象，也原生具有 Iterator 接口。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" someString = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hi'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" someString["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "function"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterator = someString["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]()\n\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { value: "h", done: false }')]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { value: "i", done: false }')]),s._v("\niterator.next() "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: undefined, done: true }")]),s._v("\n")])]),a("p",[s._v("上面代码中，调用 Symbol.iterator 方法返回一个遍历器对象，在这个遍历器上可以调用 next 方法，实现对于字符串的遍历。")]),a("p",[s._v("可以覆盖原生的 Symbol.iterator 方法，达到修改遍历器行为的目的。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" str = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("String")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hi'")]),s._v(")\n\n[...str] "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["h", "i"]')]),s._v("\n\nstr["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("next")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._first) {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._first = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bye'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" }\n      } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" }\n      }\n    },\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("_first")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n  }\n}\n\n[...str] "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["bye"]')]),s._v("\nstr "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "hi"')]),s._v("\n")])]),a("p",[s._v("上面代码中，字符串 str 的 Symbol.iterator 方法被修改了，所以扩展运算符（...）返回的值变成了 bye，而字符串本身还是 hi。")]),a("h1",[s._v("五、Iterator 接口与 Generator 函数")]),a("p",[s._v("Symbol.iterator 方法的最简单实现")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" myIterable = {}\n\nmyIterable["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("*("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("\n}\n[...myIterable] "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [1, 2, 3]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 或者采用下面的简洁写法")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = {\n  *["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]() {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'world'")]),s._v("\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" obj) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// world")]),s._v("\n")])]),a("p",[s._v("上面代码中，Symbol.iterator 方法几乎不用部署任何代码，只要用 yield 命令给出每一步的返回值即可。")]),a("h1",[s._v("六、遍历器对象的 return()，throw()")]),a("p",[s._v("遍历器对象除了具有 next 方法，还可以具有 return 方法和 throw 方法。如果你自己写遍历器对象生成函数，那么 next 方法是必须部署的，return 方法和 throw 方法是否部署是可选的。")]),a("p",[s._v("return 方法的使用场合是，如果 for...of 循环提前退出（通常是因为出错，或者有 break 语句或 continue 语句），就会调用 return 方法。如果一个对象在完成遍历前，需要清理或释放资源，就可以部署 return 方法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("readLinesSync")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("file")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n    next() {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (file.isAtEndOfFile()) {\n        file.close()\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" }\n      }\n    },\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v("() {\n      file.close()\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("done")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" }\n    }\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" line "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" readLinesSync(fileName)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(line)\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n}\n")])]),a("p",[s._v("上面代码中，函数 readLinesSync 接受一个文件对象作为参数，返回一个遍历器对象，其中除了 next 方法，还部署了 return 方法。下面，我们让文件的遍历提前返回，这样就会触发执行 return 方法。")]),a("p",[s._v("注意，return 方法必须返回一个对象，这是 Generator 规格决定的。")]),a("h1",[s._v("七、for...of 循环")]),a("p",[s._v("ES6 借鉴 C++、Java、C#和 Python 语言，引入了 for...of 循环，作为遍历所有数据结构的统一的方法。一个数据结构只要部署了 Symbol.iterator 属性，就被视为具有 iterator 接口，就可以用 for...of 循环遍历它的成员。也就是说，for...of 循环内部调用的是数据结构的 Symbol.iterator 方法。")]),a("p",[s._v("for...of 循环可以使用的范围包括数组、Set 和 Map 结构、某些类似数组的对象（比如 arguments 对象、DOM NodeList 对象）、后文的 Generator 对象，以及字符串。")]),a("h2",[s._v("数组")]),a("p",[s._v("数组原生具备 iterator 接口，for...of 循环本质上就是调用这个接口产生的遍历器，可以用下面的代码证明。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'red'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'green'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'blue'")]),s._v("]\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" iterator = arr["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]()\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" v "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" arr) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(v) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// red green blue")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" v "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" iterator) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(v) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// red green blue")]),s._v("\n}\n")])]),a("p",[s._v("上面代码的 for...of 循环的两种写法是等价的。")]),a("p",[s._v("for...of 循环可以代替数组实例的 forEach 方法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'red'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'green'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'blue'")]),s._v("]\n\narr.forEach("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("element, index")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(element) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// red green blue")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(index) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 0 1 2")]),s._v("\n})\n")])]),a("p",[s._v("JavaScript 原有的 for...in 循环，只能获得对象的键名，不能直接获取键值。ES6 提供 for...of 循环，允许遍历获得键值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'d'")]),s._v("]\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" arr) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(a) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 0 1 2 3")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" arr) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(a) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// a b c d")]),s._v("\n}\n")])]),a("p",[s._v("上面代码表明，for...in 循环读取键名，for...of 循环读取键值。如果要通过 for...of 循环，获取数组的索引，可以借助数组实例的 entries 方法和 keys 方法。")]),a("p",[s._v("for...of 循环调用遍历器接口，数组的遍历器接口只返回具有数字索引的属性。这一点跟 for...in 循环也不一样。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v("]\narr.foo = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" arr) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(i) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "0", "1", "2", "foo"')]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" arr) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(i) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//  "3", "5", "7"')]),s._v("\n}\n")])]),a("p",[s._v("上面代码中，for...of 循环不会返回数组 arr 的 foo 属性。")]),a("h2",[s._v("Set 和 Map 结构")]),a("p",[s._v("Set 和 Map 结构也原生具有 Iterator 接口，可以直接使用 for...of 循环。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" engines = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Set")]),s._v("(["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Gecko'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Trident'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Webkit'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Webkit'")]),s._v("])\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" engines) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(e)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Gecko")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Trident")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Webkit")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" es6 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Map")]),s._v("()\nes6.set("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'edition'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(")\nes6.set("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'committee'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'TC39'")]),s._v(")\nes6.set("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'standard'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ECMA-262'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" [name, value] "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" es6) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(name + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("': '")]),s._v(" + value)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// edition: 6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// committee: TC39")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// standard: ECMA-262")]),s._v("\n")])]),a("p",[s._v("上面代码演示了如何遍历 Set 结构和 Map 结构。值得注意的地方有两个，首先，遍历的顺序是按照各个成员被添加进数据结构的顺序。其次，Set 结构遍历时，返回的是一个值，而 Map 结构遍历时，返回的是一个数组，该数组的两个成员分别为当前 Map 成员的键名和键值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" map = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Map")]),s._v("().set("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(").set("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" pair "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" map) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(pair)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['a', 1]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['b', 2]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" [key, value] "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" map) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(key + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("' : '")]),s._v(" + value)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// a : 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// b : 2")]),s._v("\n")])]),a("h2",[s._v("计算生成的数据结构")]),a("p",[s._v("有些数据结构是在现有数据结构的基础上，计算生成的。比如，ES6 的数组、Set、Map 都部署了以下三个方法，调用后都返回遍历器对象。")]),a("ul",[a("li",[a("p",[s._v("entries() 返回一个遍历器对象，用来遍历[键名, 键值]组成的数组。对于数组，键名就是索引值；对于 Set，键名与键值相同。Map 结构的 iterator 接口，默认就是调用 entries 方法。")])]),a("li",[a("p",[s._v("keys() 返回一个遍历器对象，用来遍历所有的键名。")])]),a("li",[a("p",[s._v("values() 返回一个遍历器对象，用来遍历所有的键值。")])])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v("]\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" pair "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" arr.entries()) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(pair)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [0, 'a']")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [1, 'b']")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [2, 'c']")]),s._v("\n")])]),a("h2",[s._v("类似数组的对象")]),a("p",[s._v("类似数组的对象包括好几类。下面是 for...of 循环用于字符串、DOM NodeList 对象、arguments 对象的例子。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 字符串")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" str = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" s "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" str) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(s) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// h e l l o")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// DOM NodeList对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" paras = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".querySelectorAll("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'p'")]),s._v(")\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" paras) {\n  p.classList.add("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'test'")]),s._v(")\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// arguments对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("printArgs")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x)\n  }\n}\nprintArgs("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'a'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'b'")]),s._v("\n")])]),a("p",[s._v("对于字符串来说，for...of 循环还有一个特点，就是会正确识别 32 位 UTF-16 字符。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a\\uD83D\\uDC0A'")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'a'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// '\\uD83D\\uDC0A'")]),s._v("\n")])]),a("p",[s._v("并不是所有类似数组的对象都具有 iterator 接口，一个简便的解决方法，就是使用 Array.from 方法将其转为数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arrayLike = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("length")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(" }\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" arrayLike) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x)\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".from(arrayLike)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(x)\n}\n")])]),a("h2",[s._v("对象")]),a("p",[s._v("对于普通的对象，for...of 结构不能直接使用，会报错，必须部署了 iterator 接口后才能使用。但是，这样情况下，for...in 循环依然可以用来遍历键名。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" es6 = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("edition")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("committee")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'TC39'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("standard")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ECMA-262'")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (e "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" es6) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(e)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// edition")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// committee")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// standard")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (e "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" es6) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(e)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: es6 is not iterable")]),s._v("\n")])]),a("p",[s._v("上面代码表示，对于普通的对象，for...in 循环可以遍历键名，for...of 循环会报错。")]),a("p",[s._v("一种解决方法是，使用 Object.keys 方法将对象的键名生成一个数组，然后遍历这个数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".keys(someObject)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(key + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("': '")]),s._v(" + someObject[key])\n}\n")])]),a("p",[s._v("在对象上部署 iterator 接口的代码，一个方便的方法是将数组的 Symbol.iterator 属性，直接赋值给其他对象的 Symbol.iterator 属性。比如，想要让 for...of 环遍历 jQuery 对象，只要加上下面这一行就可以了。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("jQuery.prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator] = "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype["),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".iterator]\n")])]),a("p",[s._v("另一个方法是使用 Generator 函数将对象重新包装一下。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("* "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("entries")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".keys(obj)) {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" [key, obj[key]]\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" [key, value] "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" entries(obj)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(key, "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'->'")]),s._v(", value)\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// a -> 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// b -> 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// c -> 3")]),s._v("\n")])]),a("h2",[s._v("与其他遍历语法的比较")]),a("p",[s._v("以数组为例，JavaScript 提供多种遍历语法。最原始的写法就是 for 循环。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" index = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; index < myArray.length; index++) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(myArray[index])\n}\n")])]),a("p",[s._v("这种写法比较麻烦，因此数组提供内置的 forEach 方法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("myArray.forEach("),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(value)\n})\n")])]),a("p",[s._v("这种写法的问题在于，无法中途跳出 forEach 循环，break 命令或 return 命令都不能奏效。")]),a("p",[s._v("for...in 循环可以遍历数组的键名。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" index "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" myArray) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(myArray[index])\n}\n")])]),a("p",[s._v("for...in 循环有几个缺点。")]),a("ul",[a("li",[s._v("数组的键名是数字，但是 for...in 循环是以字符串作为键名“0”、“1”、“2”等等。")]),a("li",[s._v("for...in 循环不仅遍历数字键名，还会遍历手动添加的其他键，甚至包括原型链上的键。")]),a("li",[s._v("某些情况下，for...in 循环会以任意顺序遍历键名。")])]),a("p",[s._v("总之，for...in 循环主要是为遍历对象而设计的，不适用于遍历数组。")]),a("p",[s._v("for...of 循环相比上面几种做法，有一些显著的优点。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" myArray) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(value)\n}\n")])]),a("ul",[a("li",[s._v("有着同 for...in 一样的简洁语法，但是没有 for...in 那些缺点。")]),a("li",[s._v("不同用于 forEach 方法，它可以与 break、continue 和 return 配合使用。")]),a("li",[s._v("提供了遍历所有数据结构的统一操作接口。")])]),a("p",[s._v("下面是一个使用 break 语句，跳出 for...of 循环的例子。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" fibonacci) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (n > "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1000")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(n)\n}\n")])]),a("p",[s._v("上面的例子，会输出斐波纳契数列小于等于 1000 的项。如果当前项大于 1000，就会使用 break 语句跳出 for...of 循环。")])])}],!1,null,null,null);t.default=e.exports},f603:function(s,t,a){}});